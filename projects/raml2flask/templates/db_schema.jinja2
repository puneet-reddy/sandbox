#!/usr/bin/env python

'''
Autogenerated code for SQLAlchemy schemas corresponding to the
schemas defined in the RAML spec.
'''

from sqlalchemy import (Table, Column)
from sqlalchemy.types import (Integer, String, DateTime, Boolean)
from sqlalchemy.ext.declarative import declarative_base
from sqlalchemy.sql import func


Base = declarative_base()

{% for name, schema in schemas.items() %}
class {{name|capitalize}}(Base):

    __tablename__ = '{{name}}'

    Column('id', Integer, primary_key=True),
    {% for name, attr in schema.properties.items() -%}
    Column('{{name}}', {{attr.type|capitalize}}){{"," if not loop.last}}
    {% endfor %}
    def __init__(self, {% for name in schema.properties %}{{name}}=None{{", " if not loop.last else "):"}}{%endfor%}
        {% for name, attr in schema.properties.items() -%}
        self.{{name}} = {{name}}
        {% endfor %}
    def __unicode__(self):
        return self.__repr__()
    def __repr__(self):
        return f"{% for name in schema.properties %}{self.{{name}}}{{", " if not loop.last}}{%endfor%}"
{% endfor %}
